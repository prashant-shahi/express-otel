apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -o k8s
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: web
      name: web
    spec:
      ports:
        - name: "3000"
          port: 3000
          targetPort: 3000
      selector:
        io.kompose.service: web
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -o k8s
        kompose.version: 1.26.0 (40646f47)
      labels:
        io.kompose.service: web
      name: web
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: web
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -o k8s
            kompose.version: 1.26.0 (40646f47)
  
          labels:
            io.kompose.service: web
        spec:
          containers:
            - env:
                - name: HOST_IP
                  valueFrom:
                    fieldRef:
                      fieldPath: status.hostIP
                - name: K8S_POD_IP
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: status.podIP
                - name: K8S_POD_UID
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.uid
                - name: OTEL_EXPORTER_OTLP_INSECURE
                  value: "true"
                - name: OTEL_EXPORTER_OTLP_ENDPOINT
                  value: $(HOST_IP):4317
                - name: OTEL_RESOURCE_ATTRIBUTES
                  value: service.name=kind-nodejs-app,k8s.pod.ip=$(K8S_POD_IP),k8s.pod.uid=$(K8S_POD_UID)
              image: coolboi567/express-otel:latest
              imagePullPolicy: Always
              name: web
              ports:
                - containerPort: 3000
              resources: {}
          restartPolicy: Always
    status: {}
kind: List
metadata: {}

